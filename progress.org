#+title: Progress in Project
#+author: satiscugcat

* Overarching Progress : TODOs and DONEs
** DONE Implement the definitions for the three notions on page 12 of the paper
   CLOSED: [2025-04-08 Tue 23:34]
*** DONE Implement SubProof relation
    CLOSED: [2025-04-06 Sun 05:08]
*** DONE Implement terms set definition
    CLOSED: [2025-04-08 Tue 22:58]
*** DONE Implement lists(TermSet) set definition
    CLOSED: [2025-04-08 Tue 22:58]
*** DONE Implement lists(proof) set definition
    CLOSED: [2025-04-08 Tue 23:34]
** TODO Normalisation and Subterm Property
*** DONE Defining Consistency
    CLOSED: [2025-04-30 Wed 01:56]
*** DONE Formalising Normalisation and Subterm Property theorem definitions
    CLOSED: [2025-04-16 Wed 10:35]
*** TODO Proving Normalisation
**** DONE Defining Rule Transformation Function for dy proofs
     CLOSED: [2025-05-19 Mon 09:18]
**** DONE Proving its Correctness
     CLOSED: [2025-08-14 Thu 15:18]
**** TODO Defining Rule Transformation Function for eq ady proofs
***** DONE Defining the Sym transformation rules
      CLOSED: [2025-08-28 Thu 12:06]
***** DONE Proving termination of repeated application of Sym rules
      CLOSED: [2025-08-28 Thu 12:07]
***** TODO Defining Overall transformation
      The first int rules have been defined (although with liberal use of ==sorry==), currently having trouble with R_9.
      
      The rule involves a lot of weird manipulation that is supposed to be generalised to all the proj rules, and there
      are some complications involved. (For example: If we have the proof of the form proj_1 (trans \pi_1 (cons foo bar) \pi_2)), then
      the resulting proof would have to be trans (proj_1 \pi_1) foo (proj_1 \pi_2). So its been a bit difficult to work out the type of
      the recursive function such that it would handle corner cases like these.

      The other doubt is with R_11. I do not see how its correct to just eliminate everything else in the int hypotheses. The
      nature of the int rule means that the resulting membership assertion will involve a list that is necessarily smaller than
      the list being used in the membership assertion of the wk.

      I'm leaving int for now, but after cleaning out proj (since it also involves a trans rule), I think I'll be able to start
      on termination and normalisation.
      
***** TODO Proving Termination
      I have defined the measure and the partial ordering on it, and also formalised the theorem to be proven.
      Because all of the rules have some funky business going on with them, writing out the induction motives needs some careful thought.
      I will try to attempt the definition of the motives after being done with proj.
**** TODO Proving its Correctness (/ proving correctness using it)
*** TODO Proving Subterm Property
