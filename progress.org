#+title: Progress in Project
#+author: satiscugcat

* Overarching Progress : TODOs and DONEs
** DONE Implement the definitions for the three notions on page 12 of the paper
   CLOSED: [2025-04-08 Tue 23:34]
*** DONE Implement SubProof relation
    CLOSED: [2025-04-06 Sun 05:08]
*** DONE Implement terms set definition
    CLOSED: [2025-04-08 Tue 22:58]
*** DONE Implement lists(TermSet) set definition
    CLOSED: [2025-04-08 Tue 22:58]
*** DONE Implement lists(proof) set definition
    CLOSED: [2025-04-08 Tue 23:34]
** TODO Normalisation and Subterm Property
*** DONE Defining Consistency
    CLOSED: [2025-04-30 Wed 01:56]
*** DONE Formalising Normalisation and Subterm Property theorem definitions
    CLOSED: [2025-04-16 Wed 10:35]
*** TODO Proving Normalisation
**** DONE Defining Rule Transformation Function for dy proofs
     CLOSED: [2025-05-19 Mon 09:18]
**** DONE Proving its Correctness
     CLOSED: [2025-08-14 Thu 15:18]
**** TODO Defining Rule Transformation Function for eq ady proofs
***** DONE Defining the Sym transformation rules
      CLOSED: [2025-08-28 Thu 12:06]
***** DONE Proving termination of repeated application of Sym rules
      CLOSED: [2025-08-28 Thu 12:07]
***** TODO Defining Overall transformation


      I have figured out the type that's needed for being able to do the transformation with proj, and I have defined a function "recursor" accordingly, which does this only for proj_pair_left. However, for some reason LEAN can't figure out that it's terminating, even though I call recursor exactly once on a structurally smaller argument.
      
***** TODO Proving Termination
      I have defined the measure and the partial ordering on it, and also formalised the theorem to be proven.
      Because all of the rules have some funky business going on with them, writing out the induction motives needs some careful thought.
      I will try to attempt the definition of the motives after being done with proj.
**** TODO Proving its Correctness (/ proving correctness using it)
*** TODO Proving Subterm Property
